<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_game_8h_source" xml:lang="en-US">
<title>game.h</title>
<indexterm><primary>/home/Theo/Téléchargements/sae/SAE_JEU/Jeu/game.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_game_8h_source_1l00001"/>00001 
<anchor xml:id="_game_8h_source_1l00002"/>00002 
<anchor xml:id="_game_8h_source_1l00003"/>00003 <emphasis role="preprocessor">#ifndef&#32;GAME_H</emphasis>
<anchor xml:id="_game_8h_source_1l00004"/>00004 <emphasis role="preprocessor">#define&#32;GAME_H</emphasis>
<anchor xml:id="_game_8h_source_1l00005"/>00005 
<anchor xml:id="_game_8h_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_type_8h">type.h</link>&quot;</emphasis>
<anchor xml:id="_game_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_mingl_8h">mingl/mingl.h</link>&quot;</emphasis>
<anchor xml:id="_game_8h_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&lt;chrono&gt;</emphasis>
<anchor xml:id="_game_8h_source_1l00018"/>00018 
<anchor xml:id="_game_8h_source_1l00019"/>00019 
<anchor xml:id="_game_8h_source_1l00020"/>00020 
<anchor xml:id="_game_8h_source_1l00031"/><link linkend="_game_8h_1a8307899b579b12370e9fd3e399e42d04">00031</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_game_8h_1a8307899b579b12370e9fd3e399e42d04">MoveToken</link>&#32;(<link linkend="_type_8h_1a64a592133575ccebb1b36453acbec02b">CMat</link>&#32;&amp;&#32;Mat,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&amp;&#32;Move,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;&#32;Pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_c_my_param_v2">CMyParamV2</link>&#32;&amp;&#32;Param,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;&#32;Tp1,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;&#32;Tp2&#32;);
<anchor xml:id="_game_8h_source_1l00032"/>00032 
<anchor xml:id="_game_8h_source_1l00033"/>00033 
<anchor xml:id="_game_8h_source_1l00043"/><link linkend="_game_8h_1aeb06160be5949a49243364c546d6abb6">00043</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_game_8h_1aeb06160be5949a49243364c546d6abb6">IsMoveLegal</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_type_8h_1a64a592133575ccebb1b36453acbec02b">CMat</link>&#32;&amp;&#32;Mat,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&amp;&#32;Move,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;&#32;Pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_c_my_param_v2">CMyParamV2</link>&#32;&amp;&#32;Param);
<anchor xml:id="_game_8h_source_1l00044"/>00044 
<anchor xml:id="_game_8h_source_1l00056"/><link linkend="_game_8h_1ad05a86bb0b8cfd683ef1c60bd003e3ce">00056</link> std::pair&lt;char,&#32;CPosition&gt;&#32;<link linkend="_game_8h_1ad05a86bb0b8cfd683ef1c60bd003e3ce">nextMove</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_type_8h_1a64a592133575ccebb1b36453acbec02b">CMat</link>&#32;&amp;Mat,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&amp;Move,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;Pos,
<anchor xml:id="_game_8h_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_c_my_param_v2">CMyParamV2</link>&#32;&amp;Param,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;Tp1,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;Tp2);
<anchor xml:id="_game_8h_source_1l00058"/>00058 
<anchor xml:id="_game_8h_source_1l00068"/><link linkend="_game_8h_1ae80d4e86d02b962374473e98b15c6a1c">00068</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_game_8h_1ae80d4e86d02b962374473e98b15c6a1c">IsCollectible</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_type_8h_1a64a592133575ccebb1b36453acbec02b">CMat</link>&#32;&amp;&#32;Mat,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&amp;&#32;Move,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;&amp;&#32;Pos,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_c_my_param_v2">CMyParamV2</link>&#32;&amp;&#32;Param);
<anchor xml:id="_game_8h_source_1l00069"/>00069 
<anchor xml:id="_game_8h_source_1l00070"/>00070 
<anchor xml:id="_game_8h_source_1l00077"/><link linkend="_game_8h_1a1edb4cf36ce7b698766f4456c2977a4b">00077</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_game_8h_1a1edb4cf36ce7b698766f4456c2977a4b">CalculateScore</link>(std::vector&lt;char&gt;&#32;&amp;objets,&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;score);
<anchor xml:id="_game_8h_source_1l00078"/>00078 
<anchor xml:id="_game_8h_source_1l00079"/>00079 
<anchor xml:id="_game_8h_source_1l00080"/>00080 
<anchor xml:id="_game_8h_source_1l00081"/>00081 
<anchor xml:id="_game_8h_source_1l00082"/>00082 <emphasis role="keywordtype">void</emphasis>&#32;Sprite(<link linkend="_class_min_g_l">MinGL</link>&#32;&amp;window,&#32;<emphasis role="keywordtype">int</emphasis>&#32;grid_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;grid_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos_y,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mat_x,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mat_y,&#32;std::string&#32;sprite);
<anchor xml:id="_game_8h_source_1l00083"/>00083 
<anchor xml:id="_game_8h_source_1l00084"/>00084 
<anchor xml:id="_game_8h_source_1l00085"/>00085 <emphasis role="keywordtype">void</emphasis>&#32;DisplayGrid&#32;(<link linkend="_class_min_g_l">MinGL</link>&#32;&amp;window,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_type_8h_1a64a592133575ccebb1b36453acbec02b">CMat</link>&#32;&amp;&#32;mat,&#32;std::tuple&#32;&lt;int,&#32;int&gt;&#32;Screen_size);
<anchor xml:id="_game_8h_source_1l00086"/>00086 
<anchor xml:id="_game_8h_source_1l00087"/>00087 <emphasis role="keywordtype">void</emphasis>&#32;MenuP(<link linkend="_class_min_g_l">MinGL</link>&#32;&amp;window,&#32;std::vector&lt;std::tuple&lt;std::vector&lt;int&gt;,&#32;std::vector&lt;int&gt;,&#32;<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;clickablepool,
<anchor xml:id="_game_8h_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::tuple&#32;&lt;int,&#32;int&gt;&#32;Screen_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;&#32;menuid,&#32;std::chrono::time_point&lt;std::chrono::steady_clock&gt;&#32;start);
<anchor xml:id="_game_8h_source_1l00089"/>00089 
<anchor xml:id="_game_8h_source_1l00090"/>00090 <emphasis role="keywordtype">void</emphasis>&#32;Options(<link linkend="_class_min_g_l">MinGL</link>&#32;&amp;window,&#32;std::vector&lt;std::tuple&lt;std::vector&lt;int&gt;,&#32;std::vector&lt;int&gt;,&#32;<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;clickablepool,&#32;std::tuple&#32;&lt;int,&#32;int&gt;&#32;Screen_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;&#32;menuid,&#32;std::chrono::time_point&lt;std::chrono::steady_clock&gt;&#32;start);
<anchor xml:id="_game_8h_source_1l00091"/>00091 
<anchor xml:id="_game_8h_source_1l00092"/>00092 <emphasis role="keywordtype">void</emphasis>&#32;Credits(<link linkend="_class_min_g_l">MinGL</link>&#32;&amp;window,&#32;std::vector&lt;std::tuple&lt;std::vector&lt;int&gt;,&#32;std::vector&lt;int&gt;,&#32;<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;clickablepool,
<anchor xml:id="_game_8h_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::tuple&#32;&lt;int,&#32;int&gt;&#32;Screen_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;&#32;menuid,&#32;std::chrono::time_point&lt;std::chrono::steady_clock&gt;&#32;start);
<anchor xml:id="_game_8h_source_1l00094"/>00094 <emphasis role="keywordtype">void</emphasis>&#32;Pause(<link linkend="_class_min_g_l">MinGL</link>&#32;&amp;window,&#32;std::vector&lt;std::tuple&lt;std::vector&lt;int&gt;,&#32;std::vector&lt;int&gt;,&#32;<emphasis role="keywordtype">int</emphasis>&gt;&gt;&#32;clickablepool,
<anchor xml:id="_game_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::tuple&#32;&lt;int,&#32;int&gt;&#32;Screen_size,&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;&#32;menuid,&#32;std::chrono::time_point&lt;std::chrono::steady_clock&gt;&#32;start);
<anchor xml:id="_game_8h_source_1l00096"/>00096 
<anchor xml:id="_game_8h_source_1l00097"/>00097 <emphasis role="keywordtype">void</emphasis>&#32;GameLoop(<link linkend="_class_min_g_l">MinGL</link>&#32;&amp;window,&#32;std::vector&lt;std::tuple&lt;std::vector&lt;int&gt;,&#32;std::vector&lt;int&gt;,&#32;<emphasis role="keywordtype">int</emphasis>&gt;&gt;clickablepool,<link linkend="_type_8h_1a64a592133575ccebb1b36453acbec02b">CMat</link>&#32;Mat,&#32;<emphasis role="keywordtype">int</emphasis>&#32;menuid,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;PartyNum,
<anchor xml:id="_game_8h_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Key_UP,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Key_DOWN,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Key_RIGHT,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Key_LEFT,&#32;std::tuple&#32;&lt;int,&#32;int&gt;&#32;Screen_size,&#32;<link linkend="_struct_c_my_param_v2">CMyParamV2</link>&#32;param,
<anchor xml:id="_game_8h_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Victory,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;KMaxPartyNum,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;PosPlayer1,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;PosPlayer2,&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;PosTP1,
<anchor xml:id="_game_8h_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_type_8h_1a7035b1162647d49def2c24ac2c2e30c1">CPosition</link>&#32;PosTP2,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Player1Turn,&#32;std::pair&lt;char,CPosition&gt;&#32;N_move,&#32;std::vector&lt;char&gt;&#32;objetJ1,&#32;std::vector&lt;char&gt;&#32;objetJ2,
<anchor xml:id="_game_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;scoreJ1,&#32;<emphasis role="keywordtype">int</emphasis>&#32;scoreJ2,&#32;std::vector&#32;&lt;CPosition&gt;&#32;PosMonster);
<anchor xml:id="_game_8h_source_1l00102"/>00102 
<anchor xml:id="_game_8h_source_1l00108"/>00108 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_game_8h_1a0b1d64ee76933ef8f007f1208cb869a7">ppal</link>&#32;();
<anchor xml:id="_game_8h_source_1l00109"/>00109 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;GAME_H</emphasis>
</programlisting></section>
