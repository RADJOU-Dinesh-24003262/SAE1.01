<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sprite_8cpp_source" xml:lang="en-US">
<title>sprite.cpp</title>
<indexterm><primary>/home/Theo/Téléchargements/sae/SAE_JEU/MinGL2_IUT_AIX-master/src/gui/sprite.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_sprite_8cpp_source_1l00001"/>00001 
<anchor xml:id="_sprite_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_sprite_8h">mingl/gui/sprite.h</link>&quot;</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00012"/>00012 
<anchor xml:id="_sprite_8cpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&lt;fcntl.h&gt;</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00016"/>00016 
<anchor xml:id="_sprite_8cpp_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_macros_8h">mingl/macros.h</link>&quot;</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_cexception_8h">mingl/exception/cexception.h</link>&quot;</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00019"/>00019 
<anchor xml:id="_sprite_8cpp_source_1l00020"/><link linkend="_classns_gui_1_1_sprite_1a35558b08dfeb3e3a20be52da28e33c4c">00020</link> <link linkend="_classns_gui_1_1_sprite_1a35558b08dfeb3e3a20be52da28e33c4c">nsGui::Sprite::Sprite</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;filename,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>&amp;&#32;position)
<anchor xml:id="_sprite_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;:&#32;m_position(position)
<anchor xml:id="_sprite_8cpp_source_1l00022"/>00022 {
<anchor xml:id="_sprite_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fd&#32;=&#32;open(filename.c_str(),&#32;O_RDONLY);
<anchor xml:id="_sprite_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fd&#32;&lt;&#32;0)
<anchor xml:id="_sprite_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;{
<anchor xml:id="_sprite_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;[DisplaySprite]&#32;Sprite&#32;file&#32;\&quot;&quot;</emphasis>&#32;&lt;&lt;&#32;filename&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\&quot;&#32;could&#32;not&#32;be&#32;opened.&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_sprite_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;<link linkend="_classns_exception_1_1_c_exception">nsException::CException</link>(filename&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;cannot&#32;be&#32;loaded&quot;</emphasis>,&#32;<link linkend="_namespacens_exception_1ae4cd0d6bbd5590a1b121347632d41376a476dd78ae414e68d7899fc90ff757999">nsException::KFileError</link>);
<anchor xml:id="_sprite_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sprite_8cpp_source_1l00029"/>00029 
<anchor xml:id="_sprite_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;FileBegin&#32;fileBegin;
<anchor xml:id="_sprite_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;read(fd,&#32;&amp;fileBegin,&#32;<emphasis role="keyword">sizeof</emphasis>(FileBegin));
<anchor xml:id="_sprite_8cpp_source_1l00032"/>00032 
<anchor xml:id="_sprite_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint32_t&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;fileBegin.pixelCount;&#32;++i)
<anchor xml:id="_sprite_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;{
<anchor xml:id="_sprite_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;GLubyte&#32;red,&#32;green,&#32;blue,&#32;alpha;
<anchor xml:id="_sprite_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read(fd,&#32;&amp;red,&#32;&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(red));
<anchor xml:id="_sprite_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read(fd,&#32;&amp;green,&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(green));
<anchor xml:id="_sprite_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read(fd,&#32;&amp;blue,&#32;&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(blue));
<anchor xml:id="_sprite_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read(fd,&#32;&amp;alpha,&#32;&#32;<emphasis role="keyword">sizeof</emphasis>(alpha));
<anchor xml:id="_sprite_8cpp_source_1l00040"/>00040 
<anchor xml:id="_sprite_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_pixelData.push_back(<link linkend="_classns_graphics_1_1_r_g_b_acolor">nsGraphics::RGBAcolor</link>(red,&#32;green,&#32;blue,&#32;alpha));
<anchor xml:id="_sprite_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sprite_8cpp_source_1l00043"/>00043 
<anchor xml:id="_sprite_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;close(fd);
<anchor xml:id="_sprite_8cpp_source_1l00045"/>00045 
<anchor xml:id="_sprite_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;m_rowSize&#32;=&#32;fileBegin.rowSize;
<anchor xml:id="_sprite_8cpp_source_1l00047"/>00047 }&#32;<emphasis role="comment">//&#32;Sprite()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00048"/>00048 
<anchor xml:id="_sprite_8cpp_source_1l00049"/><link linkend="_classns_gui_1_1_sprite_1abee8e5a2740555d46f19af3d4b489453">00049</link> <link linkend="_classns_gui_1_1_sprite_1a35558b08dfeb3e3a20be52da28e33c4c">nsGui::Sprite::Sprite</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;nsGraphics::RGBAcolor&gt;&amp;&#32;pixelData,&#32;<emphasis role="keyword">const</emphasis>&#32;uint32_t&amp;&#32;<link linkend="_sprite_8h_1a410460a0a75462ae38c5c9daf5fb06ed">rowSize</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>&amp;&#32;position)
<anchor xml:id="_sprite_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;:&#32;m_position(position)
<anchor xml:id="_sprite_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;,&#32;m_rowSize(<link linkend="_sprite_8h_1a410460a0a75462ae38c5c9daf5fb06ed">rowSize</link>)
<anchor xml:id="_sprite_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;,&#32;m_pixelData(pixelData)
<anchor xml:id="_sprite_8cpp_source_1l00053"/>00053 {}&#32;<emphasis role="comment">//&#32;Sprite()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00054"/>00054 
<anchor xml:id="_sprite_8cpp_source_1l00055"/><link linkend="_classns_gui_1_1_sprite_1ac4b29170aef06d46990b68da76480f28">00055</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_gui_1_1_sprite_1ac4b29170aef06d46990b68da76480f28">nsGui::Sprite::draw</link>(<link linkend="_class_min_g_l">MinGL</link>&amp;&#32;window)<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00056"/>00056 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_sprite_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<link linkend="_macros_8h_1a86d500a34c624c2cae56bc25a31b12f3">UNUSED</link>(window);
<anchor xml:id="_sprite_8cpp_source_1l00058"/>00058 
<anchor xml:id="_sprite_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;glBegin(GL_POINTS);
<anchor xml:id="_sprite_8cpp_source_1l00060"/>00060 
<anchor xml:id="_sprite_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_pixelData.size();&#32;++i)
<anchor xml:id="_sprite_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;{
<anchor xml:id="_sprite_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classns_graphics_1_1_r_g_b_acolor">nsGraphics::RGBAcolor</link>&#32;actualColor&#32;=&#32;m_pixelData[i];
<anchor xml:id="_sprite_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;x&#32;=&#32;i&#32;%&#32;m_rowSize;
<anchor xml:id="_sprite_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;y&#32;=&#32;i&#32;/&#32;m_rowSize;
<anchor xml:id="_sprite_8cpp_source_1l00066"/>00066 
<anchor xml:id="_sprite_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glColor4ub(actualColor.<link linkend="_classns_graphics_1_1_r_g_b_acolor_1a55e40085f904b696a0bc63aed6258b79">getRed</link>(),&#32;actualColor.<link linkend="_classns_graphics_1_1_r_g_b_acolor_1a5f2dc1550c34149fc5cbc1629b54d7e4">getGreen</link>(),&#32;actualColor.<link linkend="_classns_graphics_1_1_r_g_b_acolor_1a9ac0893426cce20a177d6ea7af1d7129">getBlue</link>(),&#32;actualColor.<link linkend="_classns_graphics_1_1_r_g_b_acolor_1a76299c507a113e326c01fe4b0bca2b1e">getAlpha</link>());
<anchor xml:id="_sprite_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glVertex2i(x&#32;+&#32;m_position.getX(),&#32;y&#32;+&#32;m_position.getY());
<anchor xml:id="_sprite_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sprite_8cpp_source_1l00070"/>00070 
<anchor xml:id="_sprite_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;glEnd();
<anchor xml:id="_sprite_8cpp_source_1l00072"/>00072 }&#32;<emphasis role="comment">//&#32;draw()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00073"/>00073 
<anchor xml:id="_sprite_8cpp_source_1l00074"/><link linkend="_classns_gui_1_1_sprite_1a7da27e2ccf7b574896662720d99c0056">00074</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_gui_1_1_sprite_1a7da27e2ccf7b574896662720d99c0056">nsGui::Sprite::getValues</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;<emphasis role="keywordtype">id</emphasis>,&#32;std::vector&lt;float&gt;&#32;&amp;values)
<anchor xml:id="_sprite_8cpp_source_1l00075"/>00075 {
<anchor xml:id="_sprite_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>)&#32;{
<anchor xml:id="_sprite_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;TRANSITION_POSITION:
<anchor xml:id="_sprite_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values[0]&#32;=&#32;m_position.getX();
<anchor xml:id="_sprite_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;values[1]&#32;=&#32;m_position.getY();
<anchor xml:id="_sprite_8cpp_source_1l00080"/>00080 
<anchor xml:id="_sprite_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sprite_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sprite_8cpp_source_1l00083"/>00083 }&#32;<emphasis role="comment">//&#32;getValues()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00084"/>00084 
<anchor xml:id="_sprite_8cpp_source_1l00085"/><link linkend="_classns_gui_1_1_sprite_1a63ad7e76b470c578aecc697203a3eb26">00085</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_gui_1_1_sprite_1a63ad7e76b470c578aecc697203a3eb26">nsGui::Sprite::setValues</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;&amp;<emphasis role="keywordtype">id</emphasis>,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;float&gt;&#32;&amp;values)
<anchor xml:id="_sprite_8cpp_source_1l00086"/>00086 {
<anchor xml:id="_sprite_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(<emphasis role="keywordtype">id</emphasis>)&#32;{
<anchor xml:id="_sprite_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;TRANSITION_POSITION:
<anchor xml:id="_sprite_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_position.setX(values[0]);
<anchor xml:id="_sprite_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_position.setY(values[1]);
<anchor xml:id="_sprite_8cpp_source_1l00091"/>00091 
<anchor xml:id="_sprite_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_sprite_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}
<anchor xml:id="_sprite_8cpp_source_1l00094"/>00094 }&#32;<emphasis role="comment">//&#32;setValues()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00095"/>00095 
<anchor xml:id="_sprite_8cpp_source_1l00096"/><link linkend="_classns_gui_1_1_sprite_1adbe04bd427b6658e0181ce167db83d05">00096</link> <emphasis role="keyword">const</emphasis>&#32;uint32_t&amp;&#32;<link linkend="_classns_gui_1_1_sprite_1adbe04bd427b6658e0181ce167db83d05">nsGui::Sprite::getRowSize</link>()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00097"/>00097 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_sprite_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_rowSize;
<anchor xml:id="_sprite_8cpp_source_1l00099"/>00099 }&#32;<emphasis role="comment">//&#32;getRowSize()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00100"/>00100 
<anchor xml:id="_sprite_8cpp_source_1l00101"/><link linkend="_classns_gui_1_1_sprite_1ad8644780a7a7dcbcd5f2e4e7a461b685">00101</link> <emphasis role="keyword">const</emphasis>&#32;std::vector&lt;nsGraphics::RGBAcolor&gt;&amp;&#32;<link linkend="_classns_gui_1_1_sprite_1ad8644780a7a7dcbcd5f2e4e7a461b685">nsGui::Sprite::getPixelData</link>()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00102"/>00102 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_sprite_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_pixelData;
<anchor xml:id="_sprite_8cpp_source_1l00104"/>00104 }&#32;<emphasis role="comment">//&#32;getPixelData()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00105"/>00105 
<anchor xml:id="_sprite_8cpp_source_1l00106"/><link linkend="_classns_gui_1_1_sprite_1a1d6ad6681627aae6c4680fc936da8eb2">00106</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>&amp;&#32;<link linkend="_classns_gui_1_1_sprite_1a1d6ad6681627aae6c4680fc936da8eb2">nsGui::Sprite::getPosition</link>()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00107"/>00107 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_sprite_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_position;
<anchor xml:id="_sprite_8cpp_source_1l00109"/>00109 }&#32;<emphasis role="comment">//&#32;getPosition()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00110"/>00110 
<anchor xml:id="_sprite_8cpp_source_1l00111"/><link linkend="_classns_gui_1_1_sprite_1a4c695910c46504d1e8d47b838394a48e">00111</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_gui_1_1_sprite_1a4c695910c46504d1e8d47b838394a48e">nsGui::Sprite::setPosition</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>&amp;&#32;position)
<anchor xml:id="_sprite_8cpp_source_1l00112"/>00112 {
<anchor xml:id="_sprite_8cpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;m_position&#32;=&#32;position;
<anchor xml:id="_sprite_8cpp_source_1l00114"/>00114 }&#32;<emphasis role="comment">//&#32;setPosition()</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00115"/>00115 
<anchor xml:id="_sprite_8cpp_source_1l00116"/><link linkend="_classns_gui_1_1_sprite_1a26b502e88906860373c278495794998c">00116</link> <link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>&#32;<link linkend="_classns_gui_1_1_sprite_1a26b502e88906860373c278495794998c">nsGui::Sprite::computeSize</link>()<emphasis role="keyword">&#32;const</emphasis>
<anchor xml:id="_sprite_8cpp_source_1l00117"/>00117 <emphasis role="keyword"></emphasis>{
<anchor xml:id="_sprite_8cpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(m_pixelData.size()&#32;/&#32;m_rowSize,&#32;m_rowSize);
<anchor xml:id="_sprite_8cpp_source_1l00119"/>00119 }&#32;<emphasis role="comment">//&#32;computeSize()</emphasis>
</programlisting></section>
