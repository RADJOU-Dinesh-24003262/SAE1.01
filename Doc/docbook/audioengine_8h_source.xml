<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_audioengine_8h_source" xml:lang="en-US">
<title>audioengine.h</title>
<indexterm><primary>/home/Theo/Téléchargements/sae/SAE_JEU/MinGL2_IUT_AIX-master/include/mingl/audio/audioengine.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_audioengine_8h_source_1l00001"/>00001 
<anchor xml:id="_audioengine_8h_source_1l00011"/>00011 <emphasis role="preprocessor">#ifndef&#32;AUDIOENGINE_H</emphasis>
<anchor xml:id="_audioengine_8h_source_1l00012"/>00012 <emphasis role="preprocessor">#define&#32;AUDIOENGINE_H</emphasis>
<anchor xml:id="_audioengine_8h_source_1l00013"/>00013 
<anchor xml:id="_audioengine_8h_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
<anchor xml:id="_audioengine_8h_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;list&gt;</emphasis>
<anchor xml:id="_audioengine_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&lt;SFML/Audio.hpp&gt;</emphasis>&#32;<emphasis role="comment">//&#32;based&#32;on&#32;SFML</emphasis>
<anchor xml:id="_audioengine_8h_source_1l00017"/>00017 
<anchor xml:id="_audioengine_8h_source_1l00022"/>00022 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacens_audio">nsAudio</link>
<anchor xml:id="_audioengine_8h_source_1l00023"/>00023 {
<anchor xml:id="_audioengine_8h_source_1l00028"/><link linkend="_classns_audio_1_1_audio_engine">00028</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classns_audio_1_1_audio_engine">AudioEngine</link>
<anchor xml:id="_audioengine_8h_source_1l00029"/>00029 {
<anchor xml:id="_audioengine_8h_source_1l00030"/>00030 
<anchor xml:id="_audioengine_8h_source_1l00031"/>00031 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_audioengine_8h_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1a6ef72eb80bef2c1b0764c40f629d2536">setMusic</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;fileName,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;loop&#32;=&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="_audioengine_8h_source_1l00039"/>00039 
<anchor xml:id="_audioengine_8h_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1aba89263fc9f810bee40dcae229313883">toggleMusicPlaying</link>();
<anchor xml:id="_audioengine_8h_source_1l00045"/>00045 
<anchor xml:id="_audioengine_8h_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1ac21b2c1be9590a0f702c48220c59f8c9">setMusicPlaying</link>(<emphasis role="keywordtype">bool</emphasis>&#32;playing);
<anchor xml:id="_audioengine_8h_source_1l00052"/>00052 
<anchor xml:id="_audioengine_8h_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1a57e13380a3039e546a5f1b9242f8709b">isMusicPlaying</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_audioengine_8h_source_1l00058"/>00058 
<anchor xml:id="_audioengine_8h_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1a4c88595136327b3805c0322a9a8d2a0f">loadSound</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;fileName);
<anchor xml:id="_audioengine_8h_source_1l00064"/>00064 
<anchor xml:id="_audioengine_8h_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1a2b0a1a9b1cb90e1180ddedb5b9e2fad1">removeBuffer</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;&#32;fileName);
<anchor xml:id="_audioengine_8h_source_1l00070"/>00070 
<anchor xml:id="_audioengine_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1ac05b3e0d2fd9ecfd1ad8eb110f021bf3">emptyBufferList</link>();
<anchor xml:id="_audioengine_8h_source_1l00076"/>00076 
<anchor xml:id="_audioengine_8h_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1ac1343ed3afe38eb80a222969f3d74d6d">startMusicFromBeginning</link>();
<anchor xml:id="_audioengine_8h_source_1l00082"/>00082 
<anchor xml:id="_audioengine_8h_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1a47d769cc331578a398f422ff497505c8">playSoundFromBuffer</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;fileName);
<anchor xml:id="_audioengine_8h_source_1l00089"/>00089 
<anchor xml:id="_audioengine_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classns_audio_1_1_audio_engine_1aa541e8088c35ab41e4747ecd648e75e9">playSoundFromFile</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;fileName);
<anchor xml:id="_audioengine_8h_source_1l00096"/>00096 
<anchor xml:id="_audioengine_8h_source_1l00097"/>00097 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_audioengine_8h_source_1l00101"/>00101 &#32;&#32;&#32;&#32;std::list&lt;std::pair&lt;std::string,&#32;sf::SoundBuffer&gt;&gt;&#32;m_buffers;
<anchor xml:id="_audioengine_8h_source_1l00102"/>00102 
<anchor xml:id="_audioengine_8h_source_1l00106"/>00106 &#32;&#32;&#32;&#32;std::list&lt;sf::Sound&gt;&#32;m_sounds;
<anchor xml:id="_audioengine_8h_source_1l00107"/>00107 
<anchor xml:id="_audioengine_8h_source_1l00111"/>00111 &#32;&#32;&#32;&#32;std::list&lt;sf::Music&gt;&#32;m_soundsFromFiles;
<anchor xml:id="_audioengine_8h_source_1l00112"/>00112 
<anchor xml:id="_audioengine_8h_source_1l00116"/>00116 &#32;&#32;&#32;&#32;sf::Music&#32;m_music;
<anchor xml:id="_audioengine_8h_source_1l00117"/>00117 
<anchor xml:id="_audioengine_8h_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;removeOldSounds();
<anchor xml:id="_audioengine_8h_source_1l00123"/>00123 
<anchor xml:id="_audioengine_8h_source_1l00124"/>00124 };&#32;<emphasis role="comment">//&#32;class&#32;AudioEngine</emphasis>
<anchor xml:id="_audioengine_8h_source_1l00125"/>00125 
<anchor xml:id="_audioengine_8h_source_1l00126"/>00126 }&#32;<emphasis role="comment">//&#32;namespace&#32;nsAudio</emphasis>
<anchor xml:id="_audioengine_8h_source_1l00127"/>00127 
<anchor xml:id="_audioengine_8h_source_1l00128"/>00128 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;AUDIOENGINE_H</emphasis>
</programlisting></section>
