<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source" xml:lang="en-US">
<title>main.cpp</title>
<indexterm><primary>/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/examples/05-Transition/main.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00001"/><link linkend="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_1a69c339b2966791489487938c49401cf3">00001</link> <emphasis role="preprocessor">#define&#32;FPS_LIMIT&#32;60</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00002"/>00002 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;thread&gt;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00005"/>00005 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_mingl_8h">mingl/mingl.h</link>&quot;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00007"/>00007 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_circle_8h">mingl/shape/circle.h</link>&quot;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_line_8h">mingl/shape/line.h</link>&quot;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_rectangle_8h">mingl/shape/rectangle.h</link>&quot;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_triangle_8h">mingl/shape/triangle.h</link>&quot;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_transition__engine_8h">mingl/transition/transition_engine.h</link>&quot;</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00013"/>00013 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00014"/>00014 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00015"/>00015 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00016"/><link linkend="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00016</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="__min_g_l2___i_u_t___a_i_x-master_2examples_204-_souris_2main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00017"/>00017 {
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Initialise&#32;le&#32;système</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<link linkend="_class_min_g_l">MinGL</link>&#32;window(<emphasis role="stringliteral">&quot;05&#32;-&#32;Transition&quot;</emphasis>,&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(640,&#32;640),&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(128,&#32;128),&#32;<link linkend="_namespacens_graphics_1abf1d83a5438e750a393a0333bd9d5bd8">nsGraphics::KBlack</link>);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;window.<link linkend="_class_min_g_l_1a17c7718b9e966c8147cd56483dcf4e8d">initGlut</link>();
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;window.<link linkend="_class_min_g_l_1a5962a0a0ced7879bc0cc65e267e8d7fc">initGraphic</link>();
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00022"/>00022 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;instantie&#32;quelques&#32;objets&#32;transitionables</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<link linkend="_classns_shape_1_1_circle">nsShape::Circle</link>&#32;circle(<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(64,&#32;64),&#32;16,&#32;<link linkend="_namespacens_graphics_1a2eb081113194e8ff44aebd697c2cfe61">nsGraphics::KRed</link>);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<link linkend="_classns_shape_1_1_rectangle">nsShape::Rectangle</link>&#32;rect(<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(128,&#32;64),&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(512,&#32;192),&#32;<link linkend="_namespacens_graphics_1a64e9d947b926cdb9a7359e1d6f45a81e">nsGraphics::KBlue</link>);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<link linkend="_classns_shape_1_1_triangle">nsShape::Triangle</link>&#32;tri(<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(256,&#32;256),&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(256,&#32;384),&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(512,&#32;384),&#32;<link linkend="_namespacens_graphics_1a43b5e5d4f7a1bc5f2928a5a8e312773b">nsGraphics::KPurple</link>);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<link linkend="_classns_shape_1_1_line">nsShape::Line</link>&#32;line(<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(64,&#32;512),&#32;<link linkend="_classns_graphics_1_1_vec2_d">nsGraphics::Vec2D</link>(576,&#32;512),&#32;<link linkend="_namespacens_graphics_1a4ea1ef3950c89b063d76e0a13faf5ce8">nsGraphics::KNavy</link>);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00028"/>00028 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Instantie&#32;un&#32;gestionnaire&#32;de&#32;transition</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<link linkend="_classns_transition_1_1_transition_engine">nsTransition::TransitionEngine</link>&#32;transitionEngine;
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00031"/>00031 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;démarre&#32;une&#32;premiere&#32;transition&#32;simple,&#32;qui&#32;change&#32;le&#32;rayon&#32;du&#32;cercle&#32;a&#32;48&#32;pixels&#32;pendant&#32;10&#32;secondes</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1ae04163c3488c93e111b9d2638a27d6a9">startContract</link>(<link linkend="_classns_transition_1_1_transition_contract">nsTransition::TransitionContract</link>(circle,&#32;circle.<link linkend="_classns_shape_1_1_circle_1a65ce20b6f5c10a111c1542f06154a235a8a3d4b3560b97d5e11b81b58e2808393">TRANSITION_RADIUS</link>,&#32;chrono::seconds(10),&#32;{48}));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00034"/>00034 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;peut&#32;définir&#32;une&#32;fonction&#32;a&#32;appeler&#32;quand&#32;une&#32;transition&#32;se&#32;termine</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<link linkend="_classns_transition_1_1_transition_contract">nsTransition::TransitionContract</link>&#32;rectTransitionContract(rect,&#32;rect.<link linkend="_classns_shape_1_1_rectangle_1a7c29d64ac1e4ed57a3d70b5616813247a3162d563f05248a8a8e9f0ffed332ef0">TRANSITION_FILL_COLOR_ALPHA</link>,&#32;chrono::seconds(5),&#32;{64});
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;rectTransitionContract.<link linkend="_classns_transition_1_1_transition_contract_1a8f1ebafd9966553678fd7845f35bac33">setDestinationCallback</link>([&amp;]&#32;{
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;définit&#32;ici&#32;ce&#32;qu&apos;il&#32;se&#32;passe&#32;quand&#32;la&#32;transition&#32;est&#32;terminée</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Transition&#32;sur&#32;rectangle&#32;terminé!&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.<link linkend="_classns_shape_1_1_shape_1aa0e9b22c076b83c4d5014b0213e5ce07">setFillColor</link>(<link linkend="_classns_graphics_1_1_r_g_b_acolor">nsGraphics::RGBAcolor</link>(255,&#32;0,&#32;0,&#32;64));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rect.<link linkend="_classns_shape_1_1_shape_1a48821100aa1856f188bdba257505adc3">setBorderColor</link>(<link linkend="_namespacens_graphics_1ad2a6c119991dbf9f510d68a420524704">nsGraphics::KGreen</link>);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;});
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00043"/>00043 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1ae04163c3488c93e111b9d2638a27d6a9">startContract</link>(rectTransitionContract);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00045"/>00045 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;peut&#32;aussi&#32;définir&#32;plusieurs&#32;transition&#32;en&#32;même&#32;temps&#32;sur&#32;un&#32;seul&#32;objet</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1ae04163c3488c93e111b9d2638a27d6a9">startContract</link>(<link linkend="_classns_transition_1_1_transition_contract">nsTransition::TransitionContract</link>(tri,&#32;tri.<link linkend="_classns_shape_1_1_triangle_1adef21dd21ed3b5e4aa378f264abbe758a634481d887d4cd8f6d5349d795c930cc">TRANSITION_THIRD_POSITION</link>,&#32;chrono::seconds(2),&#32;{512,&#32;256}));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1ae04163c3488c93e111b9d2638a27d6a9">startContract</link>(<link linkend="_classns_transition_1_1_transition_contract">nsTransition::TransitionContract</link>(tri,&#32;tri.<link linkend="_classns_shape_1_1_triangle_1adef21dd21ed3b5e4aa378f264abbe758a183e546c687567c28475575d67a12562">TRANSITION_SECOND_POSITION</link>,&#32;chrono::seconds(2),&#32;{512,&#32;384}));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00049"/>00049 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Enfin,&#32;il&#32;existe&#32;aussi&#32;plusieurs&#32;mode&#32;de&#32;transitions&#32;(ici,&#32;nous&#32;voyons&#32;une&#32;transition&#32;infinie)</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1ae04163c3488c93e111b9d2638a27d6a9">startContract</link>(<link linkend="_classns_transition_1_1_transition_contract">nsTransition::TransitionContract</link>(line,&#32;line.<link linkend="_classns_shape_1_1_line_1a446a1bbc370b3426afe05f22b681ea58ade8f8b210eda14b4f6e940f8f72346f8">TRANSITION_FIRST_POSITION</link>,&#32;chrono::seconds(6),&#32;{288,&#32;512},
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chrono::seconds::zero(),&#32;nsTransition::Transition::TransitionMode::MODE_LOOP_SMOOTH));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1ae04163c3488c93e111b9d2638a27d6a9">startContract</link>(<link linkend="_classns_transition_1_1_transition_contract">nsTransition::TransitionContract</link>(line,&#32;line.<link linkend="_classns_shape_1_1_line_1a446a1bbc370b3426afe05f22b681ea58a55cf135d3e37710549d41ae3faf0f80b">TRANSITION_SECOND_POSITION</link>,&#32;chrono::seconds(6),&#32;{352,&#32;512},
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chrono::seconds::zero(),&#32;nsTransition::Transition::TransitionMode::MODE_LOOP_SMOOTH));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1ae04163c3488c93e111b9d2638a27d6a9">startContract</link>(<link linkend="_classns_transition_1_1_transition_contract">nsTransition::TransitionContract</link>(line,&#32;line.<link linkend="_classns_shape_1_1_line_1a446a1bbc370b3426afe05f22b681ea58a58ffbb046bb10ae9ed84a672d9daea03">TRANSITION_LINE_WIDTH</link>,&#32;chrono::seconds(6),&#32;{20},
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chrono::seconds::zero(),&#32;nsTransition::Transition::TransitionMode::MODE_LOOP_SMOOTH));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00057"/>00057 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Variable&#32;qui&#32;tient&#32;le&#32;temps&#32;de&#32;frame</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;chrono::microseconds&#32;frameTime&#32;=&#32;chrono::microseconds::zero();
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00060"/>00060 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;fait&#32;tourner&#32;la&#32;boucle&#32;tant&#32;que&#32;la&#32;fenêtre&#32;est&#32;ouverte</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(window.<link linkend="_class_min_g_l_1a05a0da9d0729e9c7dbd1121b0956866d">isOpen</link>())
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;{
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Récupère&#32;l&apos;heure&#32;actuelle</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;chrono::time_point&lt;chrono::steady_clock&gt;&#32;start&#32;=&#32;chrono::steady_clock::now();
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00066"/>00066 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;efface&#32;la&#32;fenêtre</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;window.<link linkend="_class_min_g_l_1a86c940758616957683ffb2e239bba774">clearScreen</link>();
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00069"/>00069 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;met&#32;a&#32;jour&#32;le&#32;gestionnaire&#32;de&#32;transition</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transitionEngine.<link linkend="_classns_transition_1_1_transition_engine_1a3bc437b23ee918b9ec4af070e205028f">update</link>(frameTime);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00072"/>00072 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;affiche&#32;tout&#32;les&#32;objets</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;window&#32;&lt;&lt;&#32;circle&#32;&lt;&lt;&#32;rect&#32;&lt;&lt;&#32;tri&#32;&lt;&lt;&#32;line;
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00075"/>00075 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;finit&#32;la&#32;frame&#32;en&#32;cours</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;window.<link linkend="_class_min_g_l_1a489922f0bdde2e38698adddaf57f6eda">finishFrame</link>();
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00078"/>00078 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;vide&#32;la&#32;queue&#32;d&apos;évènements</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;window.<link linkend="_class_min_g_l_1ab558253439905930836ab4910a7ae253">getEventManager</link>().<link linkend="_classns_event_1_1_event_manager_1adbc5ced9a9435f61f58436ff613632b4">clearEvents</link>();
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00081"/>00081 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;attend&#32;un&#32;peu&#32;pour&#32;limiter&#32;le&#32;framerate&#32;et&#32;soulager&#32;le&#32;CPU</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this_thread::sleep_for(chrono::milliseconds(1000&#32;/&#32;<link linkend="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_1a69c339b2966791489487938c49401cf3">FPS_LIMIT</link>)&#32;-&#32;chrono::duration_cast&lt;chrono::microseconds&gt;(chrono::steady_clock::now()&#32;-&#32;start));
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00084"/>00084 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;récupère&#32;le&#32;temps&#32;de&#32;frame</emphasis>
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameTime&#32;=&#32;chrono::duration_cast&lt;chrono::microseconds&gt;(chrono::steady_clock::now()&#32;-&#32;start);
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;}
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00088"/>00088 
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__min_g_l2___i_u_t___a_i_x-master_2examples_205-_transition_2main_8cpp_source_1l00090"/>00090 }
</programlisting></section>
