<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classns_transition_1_1_transition_contract" xml:lang="en-US">
<title>nsTransition::TransitionContract Class Reference</title>
<indexterm><primary>nsTransition::TransitionContract</primary></indexterm>
<para>

<para>Une classe contenant des paramètres pour créer une transition. </para>
 
</para>
<para>
<computeroutput>#include &lt;transition_contract.h&gt;</computeroutput>
</para>
Inheritance diagram for nsTransition::TransitionContract:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classns_transition_1_1_transition_contract__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for nsTransition::TransitionContract:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classns_transition_1_1_transition_contract__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">TransitionMode</link> { <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edba8e6b597d9cc193da6eb40a6be5dc544b">MODE_FINITE</link>
, <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edbada40ee822d94803e81878d415e46ef6a">MODE_FINITE_REVERSE</link>
, <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edbaaf7f662702b3f37a41b8cfb86598f857">MODE_LOOP</link>
, <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edba5aa6e1fbf9670aa9ecd96beff2ba6abb">MODE_LOOP_SMOOTH</link>
 }</para>

<para>TransitionMode : Liste de tout les modes de transition. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classns_transition_1_1_transition_contract_1a8ec4ef83c08901c9b93cec5eb0bfd06b">TransitionContract</link> (<link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> &amp;target, const int &amp;id, const <link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> &amp;duration, const std::vector&lt; float &gt; &amp;destination, const <link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> &amp;delay=std::chrono::seconds::zero(), const <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">TransitionMode</link> &amp;transitionMode=TransitionMode::MODE_FINITE)</para>

<para>Constructeur pour la classe <link linkend="_classns_transition_1_1_transition_contract">TransitionContract</link>. </para>
</listitem>
            <listitem><para>const int &amp; <link linkend="_classns_transition_1_1_transition_contract_1a34a594d05171628bca81120c768c86b9">getId</link> () const</para>

<para>Retourne l&apos;ID de transition, utilisé par la cible pour connaitre les valeurs a utiliser. </para>
</listitem>
            <listitem><para>const <link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> &amp; <link linkend="_classns_transition_1_1_transition_contract_1a464b06c739e50a374c4d11509cf6e5ee">getTarget</link> () const</para>

<para>Retourne la cible de transition. </para>
</listitem>
            <listitem><para>const <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">TransitionMode</link> &amp; <link linkend="_classns_transition_1_1_transition_contract_1ad5d6524d7e2eeddf9f06204b8245c484">getTransitionMode</link> () const</para>

<para>Retourne le mode de transition. </para>
</listitem>
            <listitem><para>const std::vector&lt; float &gt; &amp; <link linkend="_classns_transition_1_1_transition_contract_1a8dc505c54df5d1f09a482a1b56676cd4">getBeginning</link> () const</para>

<para>Retourne les valeurs de départ. </para>
</listitem>
            <listitem><para>const std::vector&lt; float &gt; &amp; <link linkend="_classns_transition_1_1_transition_contract_1ae4ce420a4376e1d372efb3fd046410df">getDestination</link> () const</para>

<para>Retourne les valeurs d&apos;arrivée. </para>
</listitem>
            <listitem><para>const <link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> &amp; <link linkend="_classns_transition_1_1_transition_contract_1a9b900986c8f271729f99c88fa1b0a5e1">getDuration</link> () const</para>

<para>Retourne la durée de la transition. </para>
</listitem>
            <listitem><para>void <link linkend="_classns_transition_1_1_transition_contract_1a8f1ebafd9966553678fd7845f35bac33">setDestinationCallback</link> (const std::function&lt; void()&gt; &amp;callback)</para>

<para>Définit la fonction de callback a appeler quand la transition est achevée. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>const int <link linkend="_classns_transition_1_1_transition_contract_1a48e1b58bc26cb8b6167fb6b76911c941">m_id</link></para>

<para>m_id : L&apos;ID de la transition </para>
</listitem>
            <listitem><para><link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> &amp; <link linkend="_classns_transition_1_1_transition_contract_1a1066c3c1526a519276b75a4f4c5206b2">m_target</link></para>

<para>m_target : Une référence vers une instance d&apos;une classe dérivée d&apos;<link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> </para>
</listitem>
            <listitem><para>const <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">TransitionMode</link> <link linkend="_classns_transition_1_1_transition_contract_1a9634edf746d8605e78ae30f7a0e6efd3">m_transitionMode</link></para>

<para>m_transitionMode : Le mode de transition </para>
</listitem>
            <listitem><para>std::vector&lt; float &gt; <link linkend="_classns_transition_1_1_transition_contract_1a5f804f0f4cc00d48e139ff93c5469954">m_beginning</link></para>

<para>m_beginning : Contient les valeurs de départ </para>
</listitem>
            <listitem><para>const std::vector&lt; float &gt; <link linkend="_classns_transition_1_1_transition_contract_1adc660e53bde2e552bb4148ac7abc4e42">m_destination</link></para>

<para>m_destination : Contient les valeurs d&apos;arrivées </para>
</listitem>
            <listitem><para><link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> <link linkend="_classns_transition_1_1_transition_contract_1a0c8ac97863022965d6ac0539d972c325">m_duration</link></para>

<para>m_duration : La durée de la transition </para>
</listitem>
            <listitem><para><link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> <link linkend="_classns_transition_1_1_transition_contract_1a5c317b573104f3d3c9caafbc3014ac16">m_delay</link></para>

<para>m_delay : Délai a attendre avant que la transition ne démarre </para>
</listitem>
            <listitem><para>std::function&lt; void()&gt; <link linkend="_classns_transition_1_1_transition_contract_1ac95072df084f1edbd63479c68228b9d6">m_destinationCallback</link></para>

<para>m_duration : Un pointeur vers la fonction a appeler une fois la transition achevée </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Une classe contenant des paramètres pour créer une transition. </para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00027">27</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb"/><section>
    <title>TransitionMode</title>
<indexterm><primary>TransitionMode</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>TransitionMode</secondary></indexterm>
<para><computeroutput>enum <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">nsTransition::TransitionContract::TransitionMode</link></computeroutput></para><para>

<para>TransitionMode : Liste de tout les modes de transition. </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>MODE_FINITE</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>MODE_FINITE</secondary></indexterm>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edba8e6b597d9cc193da6eb40a6be5dc544b"/>MODE_FINITE</entry><entry>
<para>Ce mode marque la <link linkend="_classns_transition_1_1_transition">Transition</link> comme terminée une fois achevée </para>
</entry></row><row><entry><indexterm><primary>MODE_FINITE_REVERSE</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>MODE_FINITE_REVERSE</secondary></indexterm>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edbada40ee822d94803e81878d415e46ef6a"/>MODE_FINITE_REVERSE</entry><entry>
<para>Ce mode va jouer la <link linkend="_classns_transition_1_1_transition">Transition</link> a l&apos;envers une fois achevée, puis marquer la <link linkend="_classns_transition_1_1_transition">Transition</link> comme étant terminée </para>
</entry></row><row><entry><indexterm><primary>MODE_LOOP</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>MODE_LOOP</secondary></indexterm>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edbaaf7f662702b3f37a41b8cfb86598f857"/>MODE_LOOP</entry><entry>
<para>Ce mode va définir les valeurs de départ a la cible une fois la <link linkend="_classns_transition_1_1_transition">Transition</link> achevée, puis se rejouer en boucle </para>
</entry></row><row><entry><indexterm><primary>MODE_LOOP_SMOOTH</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>MODE_LOOP_SMOOTH</secondary></indexterm>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edba5aa6e1fbf9670aa9ecd96beff2ba6abb"/>MODE_LOOP_SMOOTH</entry><entry>
<para>Ce mode va jouer la <link linkend="_classns_transition_1_1_transition">Transition</link> a l&apos;envers une fois achevée, puis se rejouer en boucle </para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00033">33</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a8ec4ef83c08901c9b93cec5eb0bfd06b"/><section>
    <title>TransitionContract()</title>
<indexterm><primary>TransitionContract</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>TransitionContract</secondary></indexterm>
<para><computeroutput>nsTransition::TransitionContract::TransitionContract (<link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> &amp; target, const int &amp; id, const <link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> &amp; duration, const std::vector&lt; float &gt; &amp; destination, const <link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> &amp; delay = <computeroutput>std::chrono::seconds::zero()</computeroutput>
, const <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">TransitionMode</link> &amp; transitionMode = <computeroutput>TransitionMode::MODE_FINITE</computeroutput>
)</computeroutput></para><para>

<para>Constructeur pour la classe <link linkend="_classns_transition_1_1_transition_contract">TransitionContract</link>. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in,out</entry><entry>target</entry><entry>
<para>: Une référence vers une classe dérivée d&apos;<link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> qui sera la cible </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>id</entry><entry>
<para>: L&apos;ID de la transition a appliquer </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>duration</entry><entry>
<para>: La durée de la transition </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>destination</entry><entry>
<para>: Les valeurs d&apos;arrivée </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>delay</entry><entry>
<para>: Délai avant que la transition commence (Zéro par défaut) </para>
</entry>
                            </row>
                            <row>
<entry>in</entry><entry>transitionMode</entry><entry>
<para>: Mode de transition (<link linkend="_classns_transition_1_1_transition">Transition</link> finie par défaut) </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a8dc505c54df5d1f09a482a1b56676cd4"/><section>
    <title>getBeginning()</title>
<indexterm><primary>getBeginning</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>getBeginning</secondary></indexterm>
<para><computeroutput>const std::vector&lt; float &gt; &amp; nsTransition::TransitionContract::getBeginning ( ) const</computeroutput></para><para>

<para>Retourne les valeurs de départ. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Une référence const vers m_beginning </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1ae4ce420a4376e1d372efb3fd046410df"/><section>
    <title>getDestination()</title>
<indexterm><primary>getDestination</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>getDestination</secondary></indexterm>
<para><computeroutput>const std::vector&lt; float &gt; &amp; nsTransition::TransitionContract::getDestination ( ) const</computeroutput></para><para>

<para>Retourne les valeurs d&apos;arrivée. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Une référence const vers m_destination </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a9b900986c8f271729f99c88fa1b0a5e1"/><section>
    <title>getDuration()</title>
<indexterm><primary>getDuration</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>getDuration</secondary></indexterm>
<para><computeroutput>const <link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> &amp; nsTransition::TransitionContract::getDuration ( ) const</computeroutput></para><para>

<para>Retourne la durée de la transition. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Une référence const vers m_duration </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a34a594d05171628bca81120c768c86b9"/><section>
    <title>getId()</title>
<indexterm><primary>getId</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>getId</secondary></indexterm>
<para><computeroutput>const int &amp; nsTransition::TransitionContract::getId ( ) const</computeroutput></para><para>

<para>Retourne l&apos;ID de transition, utilisé par la cible pour connaitre les valeurs a utiliser. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Une référence const vers m_id </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a464b06c739e50a374c4d11509cf6e5ee"/><section>
    <title>getTarget()</title>
<indexterm><primary>getTarget</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>getTarget</secondary></indexterm>
<para><computeroutput>const <link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> &amp; nsTransition::TransitionContract::getTarget ( ) const</computeroutput></para><para>

<para>Retourne la cible de transition. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Une référence const vers m_target </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1ad5d6524d7e2eeddf9f06204b8245c484"/><section>
    <title>getTransitionMode()</title>
<indexterm><primary>getTransitionMode</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>getTransitionMode</secondary></indexterm>
<para><computeroutput>const <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">TransitionMode</link> &amp; nsTransition::TransitionContract::getTransitionMode ( ) const</computeroutput></para><para>

<para>Retourne le mode de transition. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Une référence const vers m_transitionMode </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a8f1ebafd9966553678fd7845f35bac33"/><section>
    <title>setDestinationCallback()</title>
<indexterm><primary>setDestinationCallback</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>setDestinationCallback</secondary></indexterm>
<para><computeroutput>void nsTransition::TransitionContract::setDestinationCallback (const std::function&lt; void()&gt; &amp; callback)</computeroutput></para><para>

<para>Définit la fonction de callback a appeler quand la transition est achevée. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>callback</entry><entry>
<para>: La fonction a appeler </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a5f804f0f4cc00d48e139ff93c5469954"/><section>
    <title>m_beginning</title>
<indexterm><primary>m_beginning</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_beginning</secondary></indexterm>
<para><computeroutput>std::vector&lt;float&gt; nsTransition::TransitionContract::m_beginning<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_beginning : Contient les valeurs de départ </para>
</para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00133">133</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a5c317b573104f3d3c9caafbc3014ac16"/><section>
    <title>m_delay</title>
<indexterm><primary>m_delay</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_delay</secondary></indexterm>
<para><computeroutput><link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> nsTransition::TransitionContract::m_delay<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_delay : Délai a attendre avant que la transition ne démarre </para>
</para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00148">148</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1adc660e53bde2e552bb4148ac7abc4e42"/><section>
    <title>m_destination</title>
<indexterm><primary>m_destination</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_destination</secondary></indexterm>
<para><computeroutput>const std::vector&lt;float&gt; nsTransition::TransitionContract::m_destination<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_destination : Contient les valeurs d&apos;arrivées </para>
</para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00138">138</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1ac95072df084f1edbd63479c68228b9d6"/><section>
    <title>m_destinationCallback</title>
<indexterm><primary>m_destinationCallback</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_destinationCallback</secondary></indexterm>
<para><computeroutput>std::function&lt;void()&gt; nsTransition::TransitionContract::m_destinationCallback<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_duration : Un pointeur vers la fonction a appeler une fois la transition achevée </para>
</para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00153">153</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a0c8ac97863022965d6ac0539d972c325"/><section>
    <title>m_duration</title>
<indexterm><primary>m_duration</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_duration</secondary></indexterm>
<para><computeroutput><link linkend="_namespacens_transition_1a260258f249f46ff9a62da721537f87af">SystemDuration_t</link> nsTransition::TransitionContract::m_duration<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_duration : La durée de la transition </para>
</para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00143">143</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a48e1b58bc26cb8b6167fb6b76911c941"/><section>
    <title>m_id</title>
<indexterm><primary>m_id</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_id</secondary></indexterm>
<para><computeroutput>const int nsTransition::TransitionContract::m_id<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_id : L&apos;ID de la transition </para>
</para>

<para>Ceci est seulement utile pour la cible, car lui seul sait a quel ID correspond quelles valeurs. Ainsi, l&apos;ID n&apos;est jamais utilisée directement par la transition et est seulement passée a la cible. </para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00114">114</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a1066c3c1526a519276b75a4f4c5206b2"/><section>
    <title>m_target</title>
<indexterm><primary>m_target</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_target</secondary></indexterm>
<para><computeroutput><link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link>&amp; nsTransition::TransitionContract::m_target<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_target : Une référence vers une instance d&apos;une classe dérivée d&apos;<link linkend="_classns_transition_1_1_i_transitionable">ITransitionable</link> </para>
</para>

<para>C&apos;est la cible de la transition, sur laquelle vont s&apos;appliquer les modifications de valeurs. </para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00121">121</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<anchor xml:id="_classns_transition_1_1_transition_contract_1a9634edf746d8605e78ae30f7a0e6efd3"/><section>
    <title>m_transitionMode</title>
<indexterm><primary>m_transitionMode</primary><secondary>nsTransition::TransitionContract</secondary></indexterm>
<indexterm><primary>nsTransition::TransitionContract</primary><secondary>m_transitionMode</secondary></indexterm>
<para><computeroutput>const <link linkend="_classns_transition_1_1_transition_contract_1a40118ebf3c1a0a486934ce2b9ddc3edb">TransitionMode</link> nsTransition::TransitionContract::m_transitionMode<computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>m_transitionMode : Le mode de transition </para>
</para>

<para>Pour plus d&apos;informations, voyez les valeurs de l&apos;énumération TransitionMode. </para>
<para>
Definition at line <link linkend="_transition__contract_8h_source_1l00128">128</link> of file <link linkend="_transition__contract_8h_source">transition_contract.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
/home/Theo/Téléchargements/sae/SAE_JEU/MinGL2_IUT_AIX-master/include/mingl/transition/<link linkend="_transition__contract_8h">transition_contract.h</link></section>
</section>
