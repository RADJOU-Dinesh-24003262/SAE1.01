<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_transition__engine_8cpp_source" xml:lang="en-US">
<title>transition_engine.cpp</title>
<indexterm><primary>/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/transition/transition_engine.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_transition__engine_8cpp_source_1l00001"/>00001 
<anchor xml:id="_transition__engine_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_transition__engine_8h">mingl/transition/transition_engine.h</link>&quot;</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00012"/>00012 
<anchor xml:id="_transition__engine_8cpp_source_1l00013"/><link linkend="_transition__engine_8cpp_1a8f5466d77f69760bca9bb92217754d56">00013</link> <emphasis role="preprocessor">#define&#32;TRANSITIONENGINE&#32;nsTransition::TransitionEngine</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00014"/>00014 
<anchor xml:id="_transition__engine_8cpp_source_1l00015"/>00015 <emphasis role="keywordtype">void</emphasis>&#32;TRANSITIONENGINE::update(<emphasis role="keyword">const</emphasis>&#32;std::chrono::microseconds&#32;&amp;delta)
<anchor xml:id="_transition__engine_8cpp_source_1l00016"/>00016 {
<anchor xml:id="_transition__engine_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Update&#32;every&#32;transitioned&#32;items</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;TransitionVector_t::iterator&#32;iter&#32;=&#32;m_transitionList.begin();
<anchor xml:id="_transition__engine_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(iter&#32;!=&#32;m_transitionList.end())
<anchor xml:id="_transition__engine_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;{
<anchor xml:id="_transition__engine_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;item&#32;is&#32;finished,&#32;and&#32;remove&#32;it&#32;from&#32;the&#32;list&#32;in&#32;that&#32;case</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(iter-&gt;isFinished())
<anchor xml:id="_transition__engine_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_transition__engine_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_transitionList.erase(iter++);
<anchor xml:id="_transition__engine_8cpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_transition__engine_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_transition__engine_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter-&gt;addToElapsed(delta);
<anchor xml:id="_transition__engine_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++iter;
<anchor xml:id="_transition__engine_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_transition__engine_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;}
<anchor xml:id="_transition__engine_8cpp_source_1l00032"/>00032 }&#32;<emphasis role="comment">//&#32;update()</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00033"/>00033 
<anchor xml:id="_transition__engine_8cpp_source_1l00034"/>00034 <emphasis role="keywordtype">void</emphasis>&#32;TRANSITIONENGINE::startContract(<emphasis role="keyword">const</emphasis>&#32;TransitionContract&#32;&amp;contract)
<anchor xml:id="_transition__engine_8cpp_source_1l00035"/>00035 {
<anchor xml:id="_transition__engine_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;m_transitionList.push_back(Transition(contract));
<anchor xml:id="_transition__engine_8cpp_source_1l00037"/>00037 }&#32;<emphasis role="comment">//&#32;startContract()</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00038"/>00038 
<anchor xml:id="_transition__engine_8cpp_source_1l00039"/>00039 <emphasis role="keywordtype">void</emphasis>&#32;TRANSITIONENGINE::finishEveryTransition(<emphasis role="keyword">const</emphasis>&#32;Transition::TransitionFinishModes&#32;&amp;finishMode)
<anchor xml:id="_transition__engine_8cpp_source_1l00040"/>00040 {
<anchor xml:id="_transition__engine_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mark&#32;every&#32;transition&#32;as&#32;finished</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(Transition&#32;&amp;transition&#32;:&#32;m_transitionList)
<anchor xml:id="_transition__engine_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;{
<anchor xml:id="_transition__engine_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transition.finish(finishMode);
<anchor xml:id="_transition__engine_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;}
<anchor xml:id="_transition__engine_8cpp_source_1l00046"/>00046 }&#32;<emphasis role="comment">//&#32;finishEveryTransition()</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00047"/>00047 
<anchor xml:id="_transition__engine_8cpp_source_1l00048"/>00048 <emphasis role="keywordtype">void</emphasis>&#32;TRANSITIONENGINE::finishEveryTransitionOfTarget(<emphasis role="keyword">const</emphasis>&#32;ITransitionable&#32;&amp;transitionable,&#32;<emphasis role="keyword">const</emphasis>&#32;Transition::TransitionFinishModes&#32;&amp;finishMode)
<anchor xml:id="_transition__engine_8cpp_source_1l00049"/>00049 {
<anchor xml:id="_transition__engine_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(Transition&#32;&amp;transition&#32;:&#32;m_transitionList)
<anchor xml:id="_transition__engine_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="_transition__engine_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Check&#32;if&#32;the&#32;address&#32;of&#32;the&#32;target&#32;is&#32;the&#32;same&#32;one&#32;as&#32;the&#32;address&#32;of&#32;transitionable</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&amp;(transition.getTarget())&#32;==&#32;&amp;transitionable)
<anchor xml:id="_transition__engine_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_transition__engine_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transition.finish(finishMode);
<anchor xml:id="_transition__engine_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_transition__engine_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;}
<anchor xml:id="_transition__engine_8cpp_source_1l00058"/>00058 }&#32;&#32;<emphasis role="comment">//&#32;finishEveryTransitionOfTarget()</emphasis>
<anchor xml:id="_transition__engine_8cpp_source_1l00059"/>00059 
<anchor xml:id="_transition__engine_8cpp_source_1l00060"/>00060 <emphasis role="preprocessor">#undef&#32;TRANSITIONENGINE</emphasis>
</programlisting></section>
