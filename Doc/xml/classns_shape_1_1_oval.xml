<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="classns_shape_1_1_oval" kind="class" language="C++" prot="public">
    <compoundname>nsShape::Oval</compoundname>
    <basecompoundref refid="classns_shape_1_1_shape" prot="public" virt="non-virtual">nsShape::Shape</basecompoundref>
    <basecompoundref refid="classns_transition_1_1_i_transitionable" prot="public" virt="non-virtual">nsTransition::ITransitionable</basecompoundref>
    <includes refid="oval_8h" local="no">oval.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51f" prot="public" static="no" strong="no">
        <type></type>
        <name>TransitionIds</name>
        <qualifiedname>nsShape::Oval::TransitionIds</qualifiedname>
        <enumvalue id="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa11de15749de0fd7d832aaadcd9850ee1" prot="public">
          <name>TRANSITION_FILL_COLOR_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transition pour la couleur de remplissage </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa16791213f05fcf1ef8d379521bfba0fa" prot="public">
          <name>TRANSITION_FILL_COLOR_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transition pour la transparence de remplissage </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa9cd5532f1ff73015ed6a5741625bc8de" prot="public">
          <name>TRANSITION_BORDER_COLOR_RGB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transition pour la couleur de bord </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa2959f9a10af80841f7b581bd6e65df48" prot="public">
          <name>TRANSITION_BORDER_COLOR_ALPHA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transition pour la transparence de bord </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa84bcce94438bb134d3d344ef0ae27fa4" prot="public">
          <name>TRANSITION_POSITION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transition pour la position </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fad7142f5e149dd1f2d7c1b35f390ce2b4" prot="public">
          <name>TRANSITION_RADIUS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Transition pour le rayon </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>TransitionIds : Liste de toutes les transitions que cet élément peut exécuter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="32" column="5" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" bodystart="32" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classns_shape_1_1_oval_1a3068550e5804b17cbe3f7f216acf9f07" prot="private" static="no" mutable="no">
        <type><ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref></type>
        <definition>nsGraphics::Vec2D nsShape::Oval::m_position</definition>
        <argsstring></argsstring>
        <name>m_position</name>
        <qualifiedname>nsShape::Oval::m_position</qualifiedname>
        <briefdescription>
<para>m_position : Position du centre </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="106" column="23" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classns_shape_1_1_oval_1aa95470b20a5d3d940e033e50f04d348d" prot="private" static="no" mutable="no">
        <type><ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref></type>
        <definition>nsGraphics::Vec2D nsShape::Oval::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <qualifiedname>nsShape::Oval::m_radius</qualifiedname>
        <briefdescription>
<para>m_radius : Rayon du oval </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="111" column="23" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classns_shape_1_1_oval_1af839fdfa08b1b77edc54a83e1abcadfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nsShape::Oval::Oval</definition>
        <argsstring>(const nsGraphics::Vec2D &amp;position, const nsGraphics::Vec2D &amp;radius, const nsGraphics::RGBAcolor &amp;fillColor, const nsGraphics::RGBAcolor &amp;borderColor=nsGraphics::KTransparent)</argsstring>
        <name>Oval</name>
        <qualifiedname>nsShape::Oval::Oval</qualifiedname>
        <param>
          <type>const <ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref> &amp;</type>
          <declname>radius</declname>
        </param>
        <param>
          <type>const <ref refid="classns_graphics_1_1_r_g_b_acolor" kindref="compound">nsGraphics::RGBAcolor</ref> &amp;</type>
          <declname>fillColor</declname>
        </param>
        <param>
          <type>const <ref refid="classns_graphics_1_1_r_g_b_acolor" kindref="compound">nsGraphics::RGBAcolor</ref> &amp;</type>
          <declname>borderColor</declname>
          <defval><ref refid="namespacens_graphics_1ab2001ad03cceb2565849e04465618c1e" kindref="member">nsGraphics::KTransparent</ref></defval>
        </param>
        <briefdescription>
<para>Constructeur pour la classe <ref refid="classns_shape_1_1_oval" kindref="compound">Oval</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">firstPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>: Position du centre </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">radius</parametername>
</parameternamelist>
<parameterdescription>
<para>: Rayon du oval </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fillColor</parametername>
</parameternamelist>
<parameterdescription>
<para>: Couleur de remplissage </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">borderColor</parametername>
</parameternamelist>
<parameterdescription>
<para>: Couleur de bord </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="49" column="5" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1a323e0bcaf712c2ddad124adc42ca433b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>nsShape::Oval::~Oval</definition>
        <argsstring>() override=default</argsstring>
        <name>~Oval</name>
        <qualifiedname>nsShape::Oval::~Oval</qualifiedname>
        <briefdescription>
<para>Destructeur virtuel pour la classe <ref refid="classns_shape_1_1_oval" kindref="compound">Oval</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="55" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1a93036caafaf315f62676e95dccb5ec65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nsShape::Oval::draw</definition>
        <argsstring>(MinGL &amp;window) const override</argsstring>
        <name>draw</name>
        <qualifiedname>nsShape::Oval::draw</qualifiedname>
        <reimplements refid="classns_graphics_1_1_i_drawable_1abed8a61e1d507d31e76f0891f3bf9c51">draw</reimplements>
        <param>
          <type><ref refid="class_min_g_l" kindref="compound">MinGL</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Fonction pour afficher l&apos;objet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="57" column="18" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="22" bodyend="63"/>
        <references refid="classns_graphics_1_1_r_g_b_acolor_1a76299c507a113e326c01fe4b0bca2b1e" compoundref="rgbacolor_8cpp" startline="46" endline="49">nsGraphics::RGBAcolor::getAlpha</references>
        <references refid="classns_graphics_1_1_r_g_b_acolor_1a9ac0893426cce20a177d6ea7af1d7129" compoundref="rgbacolor_8cpp" startline="56" endline="59">nsGraphics::RGBAcolor::getBlue</references>
        <references refid="classns_graphics_1_1_r_g_b_acolor_1a5f2dc1550c34149fc5cbc1629b54d7e4" compoundref="rgbacolor_8cpp" startline="66" endline="69">nsGraphics::RGBAcolor::getGreen</references>
        <references refid="classns_graphics_1_1_r_g_b_acolor_1a55e40085f904b696a0bc63aed6258b79" compoundref="rgbacolor_8cpp" startline="76" endline="79">nsGraphics::RGBAcolor::getRed</references>
        <references refid="namespacens_graphics_1ab2001ad03cceb2565849e04465618c1e" compoundref="rgbacolor_8h" startline="175">nsGraphics::KTransparent</references>
        <references refid="macros_8h_1a86d500a34c624c2cae56bc25a31b12f3" compoundref="macros_8h" startline="17">UNUSED</references>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1a24b1974daa7894aee5dce3edb9056e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nsShape::Oval::getValues</definition>
        <argsstring>(const int &amp;id, std::vector&lt; float &gt; &amp;values) override</argsstring>
        <name>getValues</name>
        <qualifiedname>nsShape::Oval::getValues</qualifiedname>
        <reimplements refid="classns_transition_1_1_i_transitionable_1a5871a16fd47c1e5c8bacdd5da8597ed9">getValues</reimplements>
        <param>
          <type>const int &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::vector&lt; float &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Récupère des valeurs dans un vecteur de float pour l&apos;ID spécifié </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID des valeurs a récupérer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Vecteur de valeurs a peupler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="59" column="18" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="65" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1a56c7b08484c2dc730e4850ff191aa80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void nsShape::Oval::setValues</definition>
        <argsstring>(const int &amp;id, const std::vector&lt; float &gt; &amp;values) override</argsstring>
        <name>setValues</name>
        <qualifiedname>nsShape::Oval::setValues</qualifiedname>
        <reimplements refid="classns_transition_1_1_i_transitionable_1ade37d29f7f2ca4890ed0e2e64d033197">setValues</reimplements>
        <param>
          <type>const int &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Définit les nouvelles valeurs pour l&apos;ID spécifié </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID des valeurs a définir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">values</parametername>
</parameternamelist>
<parameterdescription>
<para>Vecteur des nouvelles valeurs a appliquer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="60" column="18" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="106" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1af87d45ca6ab470b17189fc1d50a14343" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classns_shape_1_1_oval" kindref="compound">Oval</ref></type>
        <definition>Oval nsShape::Oval::operator+</definition>
        <argsstring>(const nsGraphics::Vec2D &amp;getPosition) const</argsstring>
        <name>operator+</name>
        <qualifiedname>nsShape::Oval::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref> &amp;</type>
          <declname>getPosition</declname>
          <defname>position</defname>
        </param>
        <briefdescription>
<para>Opérateur de décalage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>: Position a additionner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="67" column="10" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1a265f23778e17f28a9cf247bf3fe25c9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classns_shape_1_1_oval" kindref="compound">Oval</ref></type>
        <definition>Oval nsShape::Oval::operator*</definition>
        <argsstring>(const float &amp;f) const</argsstring>
        <name>operator*</name>
        <qualifiedname>nsShape::Oval::operator*</qualifiedname>
        <param>
          <type>const float &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Opérateur de réduction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">f</parametername>
</parameternamelist>
<parameterdescription>
<para>: Nombre avec lequel multiplier la position actuelle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="74" column="10" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1a446b4eee9569adca380f5f9ba1ddc832" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref> &amp;</type>
        <definition>const nsGraphics::Vec2D &amp; nsShape::Oval::getPosition</definition>
        <argsstring>() const</argsstring>
        <name>getPosition</name>
        <qualifiedname>nsShape::Oval::getPosition</qualifiedname>
        <briefdescription>
<para>Récupère la position de l&apos;oval. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="80" column="29" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1addd2809c1ba6ec90453a75b94d9707ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nsShape::Oval::setPosition</definition>
        <argsstring>(const nsGraphics::Vec2D &amp;position)</argsstring>
        <name>setPosition</name>
        <qualifiedname>nsShape::Oval::setPosition</qualifiedname>
        <param>
          <type>const <ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Définit la nouvelle position de l&apos;oval. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">position</parametername>
</parameternamelist>
<parameterdescription>
<para>: Nouvelle position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="87" column="10" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1abb39756c5ed715fed211eba826db7506" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref> &amp;</type>
        <definition>const nsGraphics::Vec2D nsShape::Oval::getRadius</definition>
        <argsstring>() const</argsstring>
        <name>getRadius</name>
        <qualifiedname>nsShape::Oval::getRadius</qualifiedname>
        <briefdescription>
<para>Récupère le rayon de l&apos;oval. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="93" column="29" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classns_shape_1_1_oval_1af8569e0b2f6549b4bec902f87618a1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nsShape::Oval::setRadius</definition>
        <argsstring>(const nsGraphics::Vec2D &amp;radius)</argsstring>
        <name>setRadius</name>
        <qualifiedname>nsShape::Oval::setRadius</qualifiedname>
        <param>
          <type>const <ref refid="classns_graphics_1_1_vec2_d" kindref="compound">nsGraphics::Vec2D</ref> &amp;</type>
          <declname>radius</declname>
        </param>
        <briefdescription>
<para>Définit le nouveau rayon de l&apos;oval. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">radius</parametername>
</parameternamelist>
<parameterdescription>
<para>: Nouveau rayon </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="100" column="10" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/src/shape/oval.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classe représentant un <ref refid="classns_shape_1_1_oval" kindref="compound">Oval</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>nsGraphics::IDrawable</label>
        <link refid="classns_graphics_1_1_i_drawable"/>
      </node>
      <node id="1">
        <label>nsShape::Oval</label>
        <link refid="classns_shape_1_1_oval"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nsShape::Shape</label>
        <link refid="classns_shape_1_1_shape"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>nsTransition::ITransitionable</label>
        <link refid="classns_transition_1_1_i_transitionable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>nsGraphics::IDrawable</label>
        <link refid="classns_graphics_1_1_i_drawable"/>
      </node>
      <node id="4">
        <label>nsGraphics::RGBAcolor</label>
        <link refid="classns_graphics_1_1_r_g_b_acolor"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>nsShape::Oval</label>
        <link refid="classns_shape_1_1_oval"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>nsShape::Shape</label>
        <link refid="classns_shape_1_1_shape"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_borderColor</edgelabel>
          <edgelabel>m_fillColor</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>nsTransition::ITransitionable</label>
        <link refid="classns_transition_1_1_i_transitionable"/>
      </node>
      <node id="5">
        <label>nsUtil::IEditable</label>
        <link refid="classns_util_1_1_i_editable"/>
      </node>
    </collaborationgraph>
    <location file="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" line="25" column="1" bodyfile="/home/Theo/Téléchargements/sae/MinGL2_IUT_AIX-master/include/mingl/shape/oval.h" bodystart="26" bodyend="113"/>
    <listofallmembers>
      <member refid="classns_shape_1_1_oval_1a93036caafaf315f62676e95dccb5ec65" prot="public" virt="virtual"><scope>nsShape::Oval</scope><name>draw</name></member>
      <member refid="classns_shape_1_1_shape_1aca75f4b06e8e5b04d0271d191210299d" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>getBorderColor</name></member>
      <member refid="classns_shape_1_1_shape_1a8efbd1ac47497b188edeb019557ef754" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>getFillColor</name></member>
      <member refid="classns_shape_1_1_oval_1a446b4eee9569adca380f5f9ba1ddc832" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>getPosition</name></member>
      <member refid="classns_shape_1_1_oval_1abb39756c5ed715fed211eba826db7506" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>getRadius</name></member>
      <member refid="classns_shape_1_1_oval_1a24b1974daa7894aee5dce3edb9056e03" prot="public" virt="virtual"><scope>nsShape::Oval</scope><name>getValues</name></member>
      <member refid="classns_shape_1_1_shape_1a0444014e3ee0fa1e6ba5295e530a4f82" prot="protected" virt="non-virtual"><scope>nsShape::Oval</scope><name>m_borderColor</name></member>
      <member refid="classns_shape_1_1_shape_1a68841e117adddc95734dcbaa62f68832" prot="protected" virt="non-virtual"><scope>nsShape::Oval</scope><name>m_fillColor</name></member>
      <member refid="classns_shape_1_1_oval_1a3068550e5804b17cbe3f7f216acf9f07" prot="private" virt="non-virtual"><scope>nsShape::Oval</scope><name>m_position</name></member>
      <member refid="classns_shape_1_1_oval_1aa95470b20a5d3d940e033e50f04d348d" prot="private" virt="non-virtual"><scope>nsShape::Oval</scope><name>m_radius</name></member>
      <member refid="classns_shape_1_1_oval_1a265f23778e17f28a9cf247bf3fe25c9d" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>operator*</name></member>
      <member refid="classns_shape_1_1_oval_1af87d45ca6ab470b17189fc1d50a14343" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>operator+</name></member>
      <member refid="classns_shape_1_1_oval_1af839fdfa08b1b77edc54a83e1abcadfb" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>Oval</name></member>
      <member refid="classns_shape_1_1_shape_1a48821100aa1856f188bdba257505adc3" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>setBorderColor</name></member>
      <member refid="classns_shape_1_1_shape_1aa0e9b22c076b83c4d5014b0213e5ce07" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>setFillColor</name></member>
      <member refid="classns_shape_1_1_oval_1addd2809c1ba6ec90453a75b94d9707ff" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>setPosition</name></member>
      <member refid="classns_shape_1_1_oval_1af8569e0b2f6549b4bec902f87618a1f5" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>setRadius</name></member>
      <member refid="classns_shape_1_1_oval_1a56c7b08484c2dc730e4850ff191aa80d" prot="public" virt="virtual"><scope>nsShape::Oval</scope><name>setValues</name></member>
      <member refid="classns_shape_1_1_shape_1a879f450649c23c83dee576234703951d" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>Shape</name></member>
      <member refid="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa2959f9a10af80841f7b581bd6e65df48" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>TRANSITION_BORDER_COLOR_ALPHA</name></member>
      <member refid="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa9cd5532f1ff73015ed6a5741625bc8de" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>TRANSITION_BORDER_COLOR_RGB</name></member>
      <member refid="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa16791213f05fcf1ef8d379521bfba0fa" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>TRANSITION_FILL_COLOR_ALPHA</name></member>
      <member refid="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa11de15749de0fd7d832aaadcd9850ee1" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>TRANSITION_FILL_COLOR_RGB</name></member>
      <member refid="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fa84bcce94438bb134d3d344ef0ae27fa4" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>TRANSITION_POSITION</name></member>
      <member refid="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51fad7142f5e149dd1f2d7c1b35f390ce2b4" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>TRANSITION_RADIUS</name></member>
      <member refid="classns_shape_1_1_oval_1a0378c58dcf35bd9d829f49bebdcdf51f" prot="public" virt="non-virtual"><scope>nsShape::Oval</scope><name>TransitionIds</name></member>
      <member refid="classns_graphics_1_1_i_drawable_1ab7a2ae7682163969bd4627e402ef0867" prot="public" virt="virtual"><scope>nsShape::Oval</scope><name>~IDrawable</name></member>
      <member refid="classns_transition_1_1_i_transitionable_1addd11ff845b6387b07672a64c1b8938e" prot="public" virt="virtual"><scope>nsShape::Oval</scope><name>~ITransitionable</name></member>
      <member refid="classns_shape_1_1_oval_1a323e0bcaf712c2ddad124adc42ca433b" prot="public" virt="virtual"><scope>nsShape::Oval</scope><name>~Oval</name></member>
      <member refid="classns_shape_1_1_shape_1aaa22752af0d45c4e219e3870baf899d4" prot="public" virt="virtual"><scope>nsShape::Oval</scope><name>~Shape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
